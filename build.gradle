plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1+'
}

base {
    archivesName = "${mod_id}-${minecraft_version}"
}

version = "${mod_version}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: mapping_channel, version: mapping_version

    runs {
        configureEach  {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            property 'fml.earlyprogresswindow', 'false'
            property 'mixin.env.disableRefMap', 'true'

            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }

        client {
            taskName "client"
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            taskName "server"
            property "forge.enabledGameTestNamespaces", mod_id
        }

        data {
            taskName "data"
            workingDirectory project.file('run-data')
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), --'existing', file('src/main/resources')
        }

        sourceSets.main.resources { srcDir 'src/generated/resources' }

        respositories {}
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title': mod_id,
                'Specification-Vendor': "Matt√©o",
                'Specification-Version': "1",
                'Implementation-Timestap': new Date().format("yyyy-MM-dd:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}

tasks.register('sourceJar', Jar) {
    dependsOn 'classes'
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}